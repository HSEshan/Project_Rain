name: project-rain

services:
  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - ./postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${POSTGRES_USER:-superuser}",
          "-d",
          "${POSTGRES_DB:-devdb}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  rest_api:
    image: ghcr.io/hseshan/project_rain/rest_api:prod
    env_file:
      - ./rest_api.env
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  ws_gateway:
    image: ghcr.io/hseshan/project_rain/ws_gateway:prod
    env_file:
      - ./ws_gateway.env
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  event_consumer:
    image: ghcr.io/hseshan/project_rain/event_consumer:prod
    env_file:
      - ./event_consumer.env
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    restart: unless-stopped
    depends_on:
      - redis
      - postgres

  lease_manager:
    image: ghcr.io/hseshan/project_rain/lease_manager:prod
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    restart: unless-stopped
    depends_on:
      - redis
      - postgres

  frontend:
    image: ghcr.io/hseshan/project_rain/frontend:prod
    restart: unless-stopped

  # edge nginx: PUBLIC ENTRYPOINT
  edge:
    image: nginx:1.25-alpine
    restart: unless-stopped
    depends_on:
      - rest_api
      - ws_gateway
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  postgres_data:
  redis_data:
